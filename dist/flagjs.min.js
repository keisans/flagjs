/*! flagjs - v0.1.0 - 2014-05-22
* Copyright (c) 2014 ; Licensed MIT */
var Flags=function(a){this.flags=0,this.flagHash={},this.keys=0,a&&this.newFlags(a)};Flags.prototype=function(){var a={},b=function(a){return this.flagHash[a]?this.flagHash[a]:(this.flagHash[a]=Math.pow(2,this.keys),void(this.keys+=1))},c=function(a){if(!this.flagHash[a])throw a+"is not a valid flag. Make sure you created it with the newFlag function";this.flags&this.flagHash[a]||(this.flags+=this.flagHash[a])},d=function(a){if(!this.flagHash[a])throw a+"is not a valid flag. Make sure you created it with the newFlag function";this.flags&this.flagHash[a]&&(this.flags-=this.flagHash[a])},e=function(a){var b=0;for(var c in a)if(a.hasOwnProperty(c)){if(!this.flagHash[a[c]])throw a[c]+" is not a valid flag. Make sure you created it with the newFlag function";b+=this.flagHash[a[c]]}return b},f=function(a,b,c){var d="number"==typeof a?a:"string"==typeof a?this.flagHash[a]:e.call(this,a),f=!1;return f=b?(this.flags&d)===d?!0:!1:this.flags&d?!0:!1,c&&(f=!f),f};return a.newFlags=function(a){if("string"==typeof a)b.call(this,a);else for(var c in a)a.hasOwnProperty(c)&&b.call(this,a[c]);return this},a._createMask=function(a){return e.call(this,a)},a.hasAny=function(a){return f.call(this,a,!1,!1)},a.hasAllOf=function(a){return f.call(this,a,!0,!1)},a.all=function(){var a=Math.pow(2,this.keys)-1;return this.flags===a?!0:!1},a.notAny=function(a){return f.call(this,a,!1,!0)},a.notAllOf=function(a){return f.call(this,a,!0,!0)},a.none=function(){return 0===this.flags?!0:!1},a.parseFlags=function(){var a=[];for(var b in this.flagHash)this.flagHash.hasOwnProperty(b)&&this.flags&this.flagHash[b]&&a.push(b);return a},a.add=function(a){if("string"==typeof a)c.call(this,a);else for(var b in a)a.hasOwnProperty(b)&&c.call(this,a[b]);return this},a.remove=function(a){if("string"==typeof a)d.call(this,a);else for(var b in a)a.hasOwnProperty(b)&&d.call(this,a[b]);return this},a.reset=function(a){var b=Math.pow(2,this.keys)-1;if("number"!=typeof a)return this.flags=0,this.add(a);if(!(b>=a))throw a+" is not a valid flag mask. Please make sure all your flags are defined";return this.flags=a,this},a.unregister=function(){this.keys=0,this.flagHash={},this.flags=0},a}(),"function"==typeof define&&define.amd&&define("flags",[],Flags);